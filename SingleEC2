
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template for Wazuh Cluster in single and single subnet 
  **WARNING** This template creates 5 Amazon  EC2 instance with Wazuh installation. 
  You will be billed for the AWS resources used if you create a stack from this template.
Parameters:
  InstanceType:
    Description: Wazuh EC2 instance type bigger than 2C 4G
    Type: String
    Default: t3.medium
    AllowedValues:
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - t3a.medium
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5a.large
      - c5a.xlarge
      - c5a.2xlarge
      - c5a.4xlarge
      - c5a.8xlarge
      - c6i.large
      - c6i.xlarge
      - c6i.2xlarge
      - c6i.4xlargei
      - c6i.8xlarge
      - c6a.large
      - c6a.xlarge
      - c6a.2xlarge
      - c6a.4xlargei
      - c6a.8xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: Must have define an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: ' The IP address range that can be used to SSH to the EC2 instances'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Mappings:
  Region2Examples:
    ap-east-1:
      Examples: 'https://s3-ap-east-1.amazonaws.com/cloudformation-examples-ap-east-1'
    ap-northeast-1:
      Examples: >-
        https://s3-ap-northeast-1.amazonaws.com/cloudformation-examples-ap-northeast-1
    ap-northeast-2:
      Examples: >-
        https://s3-ap-northeast-2.amazonaws.com/cloudformation-examples-ap-northeast-2
    ap-northeast-3:
      Examples: >-
        https://s3-ap-northeast-3.amazonaws.com/cloudformation-examples-ap-northeast-3
    ap-south-1:
      Examples: 'https://s3-ap-south-1.amazonaws.com/cloudformation-examples-ap-south-1'
    ap-southeast-1:
      Examples: >-
        https://s3-ap-southeast-1.amazonaws.com/cloudformation-examples-ap-southeast-1
    ap-southeast-2:
      Examples: >-
        https://s3-ap-southeast-2.amazonaws.com/cloudformation-examples-ap-southeast-2
    ca-central-1:
      Examples: >-
        https://s3-ca-central-1.amazonaws.com/cloudformation-examples-ca-central-1
    cn-north-1:
      Examples: >-
        https://s3.cn-north-1.amazonaws.com.cn/cloudformation-examples-cn-north-1
    cn-northwest-1:
      Examples: >-
        https://s3.cn-northwest-1.amazonaws.com.cn/cloudformation-examples-cn-northwest-1
    eu-central-1:
      Examples: >-
        https://s3-eu-central-1.amazonaws.com/cloudformation-examples-eu-central-1
    eu-north-1:
      Examples: 'https://s3-eu-north-1.amazonaws.com/cloudformation-examples-eu-north-1'
    eu-west-1:
      Examples: 'https://s3-eu-west-1.amazonaws.com/cloudformation-examples-eu-west-1'
    eu-west-2:
      Examples: 'https://s3-eu-west-2.amazonaws.com/cloudformation-examples-eu-west-2'
    eu-west-3:
      Examples: 'https://s3-eu-west-3.amazonaws.com/cloudformation-examples-eu-west-3'
    me-south-1:
      Examples: 'https://s3-me-south-1.amazonaws.com/cloudformation-examples-me-south-1'
    sa-east-1:
      Examples: 'https://s3-sa-east-1.amazonaws.com/cloudformation-examples-sa-east-1'
    us-east-1:
      Examples: 'https://s3.amazonaws.com/cloudformation-examples-us-east-1'
    us-east-2:
      Examples: 'https://s3-us-east-2.amazonaws.com/cloudformation-examples-us-east-2'
    us-west-1:
      Examples: 'https://s3-us-west-1.amazonaws.com/cloudformation-examples-us-west-1'
    us-west-2:
      Examples: 'https://s3-us-west-2.amazonaws.com/cloudformation-examples-us-west-2'
  AWSInstanceType2Arch:
    t3.medium:
      Arch: HVM64
    t3.large:
      Arch: HVM64
    t3.xlarge:
      Arch: HVM64
    t3.2xlarge:
      Arch: HVM64
    t3a.medium:
      Arch: HVM64
    t3a.large:
      Arch: HVM64
    t3a.xlarge:
      Arch: HVM64
    t3a.2xlarge:
      Arch: HVM64
    m5.large:
      Arch: HVM64
    m5.xlarge:
      Arch: HVM64
    m5.2xlarge:
      Arch: HVM64
    m5.4xlarge:
      Arch: HVM64
    m5.8xlarge:
      Arch: HVM64
    c5.large:
      Arch: HVM64
    c5.xlarge:
      Arch: HVM64
    c5.2xlarge:
      Arch: HVM64
    c5.4xlarge:
      Arch: HVM64
    c5.9xlarge:
      Arch: HVM64
    c5a.large:
      Arch: HVM64
    c5a.xlarge:
      Arch: HVM64
    c5a.2xlarge:
      Arch: HVM64
    c5a.4xlarge:
      Arch: HVM64
    c5a.8xlarge:
      Arch: HVM64
    c6i.large:
      Arch: HVM64
    c6i.xlarge:
      Arch: HVM64
    c6i.2xlarge:
      Arch: HVM64
    c6i.4xlargei:
      Arch: HVM64
    c6i.8xlarge:
      Arch: HVM64
    c6a.large:
      Arch: HVM64
    c6a.xlarge:
      Arch: HVM64
    c6a.2xlarge:
      Arch: HVM64
    c6a.4xlargei:
      Arch: HVM64
    c6a.8xlarge:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t3.medium:
      Arch: NATHVM64
    t3.large:
      Arch: NATHVM64
    t3.xlarge:
      Arch: NATHVM64
    t3.2xlarge:
      Arch: NATHVM64
    t3a.medium:
      Arch: NATHVM64
    t3a.large:
      Arch: NATHVM64
    t3a.xlarge:
      Arch: NATHVM64
    t3a.2xlarge:
      Arch: NATHVM64
    m5.large:
      Arch: NATHVM64
    m5.xlarge:
      Arch: NATHVM64
    m5.2xlarge:
      Arch: NATHVM64
    m5.4xlarge:
      Arch: NATHVM64
    m5.8xlarge:
      Arch: NATHVM64
    c5.large:
      Arch: NATHVM64
    c5.xlarge:
      Arch: NATHVM64
    c5.2xlarge:
      Arch: NATHVM64
    c5.4xlarge:
      Arch: NATHVM64
    c5.9xlarge:
      Arch: NATHVM64
    c5a.large:
      Arch: NATHVM64
    c5a.xlarge:
      Arch: NATHVM64
    c5a.2xlarge:
      Arch: NATHVM64
    c5a.4xlarge:
      Arch: NATHVM64
    c5a.8xlarge:
      Arch: NATHVM64
    c6i.large:
      Arch: NATHVM64
    c6i.xlarge:
      Arch: NATHVM64
    c6i.2xlarge:
      Arch: NATHVM64
    c6i.4xlargei:
      Arch: NATHVM64
    c6i.8xlarge:
      Arch: NATHVM64
    c6a.large:
      Arch: NATHVM64
    c6a.xlarge:
      Arch: NATHVM64
    c6a.2xlarge:
      Arch: NATHVM64
    c6a.4xlargei:
      Arch: NATHVM64
    c6a.8xlarge:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    af-south-1:
      HVM64: ami-0799fd71a56e64aa8
      HVMG2: NOT_SUPPORTED
    ap-east-1:
      HVM64: ami-01c628c385b509fdc
      HVMG2: NOT_SUPPORTED
    ap-northeast-1:
      HVM64: ami-0ecb2a61303230c9d
      HVMG2: NOT_SUPPORTED
    ap-northeast-2:
      HVM64: ami-01711d925a1e4cc3a
      HVMG2: NOT_SUPPORTED
    ap-northeast-3:
      HVM64: ami-0bfdfe2977c12e24b
      HVMG2: NOT_SUPPORTED
    ap-south-1:
      HVM64: ami-076e3a557efe1aa9c
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      HVM64: ami-0ff89c4ce7de192ea
      HVMG2: NOT_SUPPORTED
    ap-southeast-2:
      HVM64: ami-0c641f2290e9cd048
      HVMG2: NOT_SUPPORTED
    ca-central-1:
      HVM64: ami-041a9937e9118f3f3
      HVMG2: NOT_SUPPORTED
    cn-north-1:
      HVM64: ami-04dac53f59f1a5713
      HVMG2: NOT_SUPPORTED
    cn-northwest-1:
      HVM64: ami-07627413c7c9c8cff
      HVMG2: NOT_SUPPORTED
    eu-central-1:
      HVM64: ami-0c956e207f9d113d5
      HVMG2: NOT_SUPPORTED
    eu-north-1:
      HVM64: ami-01977e30682e5df74
      HVMG2: NOT_SUPPORTED
    eu-south-1:
      HVM64: ami-07ad31c51829a4b4e
      HVMG2: NOT_SUPPORTED
    eu-west-1:
      HVM64: ami-089950bc622d39ed8
      HVMG2: NOT_SUPPORTED
    eu-west-2:
      HVM64: ami-0e34bbddc66def5ac
      HVMG2: NOT_SUPPORTED
    eu-west-3:
      HVM64: ami-02d0b1ffa5f16402d
      HVMG2: NOT_SUPPORTED
    me-south-1:
      HVM64: ami-0c97a4c7395eab056
      HVMG2: NOT_SUPPORTED
    sa-east-1:
      HVM64: ami-0a9e90bd830396d02
      HVMG2: NOT_SUPPORTED
    us-east-1:
      HVM64: ami-0d7734f53f491186b
      HVMG2: NOT_SUPPORTED
    us-east-2:
      HVM64: ami-051dfed8f67f095f5
      HVMG2: NOT_SUPPORTED
    us-west-1:
      HVM64: ami-0e4d9ed95865f3b40
      HVMG2: NOT_SUPPORTED
    us-west-2:
      HVM64: ami-0cea098ed2ac54925
      HVMG2: NOT_SUPPORTED
Resources:
  VPC:
  Description: Use StackId as name of VPC
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  Subnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  Route:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet
      RouteTableId: !Ref RouteTable
  IPAddress:
    Type: 'AWS::EC2::EIP'
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      InstanceId: !Ref WazuhInstance
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Enable SSH and Wazuh access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
         - IpProtocol: tcp
          FromPort: '1514'
          ToPort: '1514'
          CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
          FromPort: '1515'
          ToPort: '1515'
          CidrIp: 0.0.0.0/0
         - IpProtocol: tcp
          FromPort: '1516'
          ToPort: '1516'
          CidrIp: 0.0.0.0/0
         - IpProtocol: tcp
          FromPort: '514'
          ToPort: '514'
          CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
          FromPort: '55000'
          ToPort: '55000'
          CidrIp: 0.0.0.0/0
          - IpProtocol: udp
          FromPort: '1514'
          ToPort: '1514'
          CidrIp: 0.0.0.0/0
          - IpProtocol: udp
          FromPort: '514'
          ToPort: '514'
          CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
          FromPort: '9200'
          ToPort: '9200'
          CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
          FromPort: '9300'
          ToPort: '9400'
          CidrIp: 0.0.0.0/0
  WazuhInstance:
    Type: 'AWS::EC2::Instance'
    DependsOn: AttachGateway
    Metadata:
      Comment: Install Wazuh All in one application
      'AWS::CloudFormation::Init':
        config:
          packages:
            yum:
              httpd: []
          files:
            /var/www/html/index.html:
              content: !Join 
                - |+

                - - <img src="
                  - !FindInMap 
                    - Region2Examples
                    - !Ref 'AWS::Region'
                    - Examples
                  - /cloudformation_graphic.png" alt="AWS CloudFormation Logo"/>
                  - >-
                    <h1>Congratulations, you have successfully launched the AWS
                    CloudFormation sample.</h1>
              mode: '000644'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Join 
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join 
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - >
                    path=Resources.WazuhInstance.Metadata.AWS::CloudFormation::Init
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource WazuhInstance '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - |+

                  - |
                    runas=root
              mode: '000400'
              owner: root
              group: root
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
    Properties:
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
      NetworkInterfaces:
        - GroupSet:
            - !Ref InstanceSecurityGroup
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref Subnet
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum update -y aws-cfn-bootstrap
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WazuhInstance '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WazuhInstance '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
Outputs:
  URL:
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - WazuhInstance
          - PublicIp
    Description: Newly created application URL
